#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

//void qsort(void* base,
//		   size_t num, 
//	       size_t width,
//		   int(__cdecl* compare)(const void* elem1, const void* elem2)
//			);
//void*类型的指针可以接受任意类型的地址
//void*类型的指针，不能进行解引用操作
//void*类型的指针，不能进行+-整数的操作

/*
int Add(int x, int y)
{
	return x + y;
}
int main()
{
	int arr[10] = { 0 };
	//指针数组
	int* arr[10];
	//数组指针
	int(*p)[10] = &arr;
	//函数指针
	int (*pAdd)(int, int) = Add;
	//int sum = (*pAdd)(1, 2);
	//int sum = pAdd(1, 2);
	//printf("sum=%d\n", sum);
	//函数指针的数组
	int(*pAdd[10])(int, int);
	//指向函数指针的数组的指针
	int(*(*pfAdd)[10])(int, int) = &pAdd;

	return 0;
}*/

void bubble_sort(int arr[10], int sz)
{
	int i = 0;
	int j = 0;
	int temp = 0;
	for (i = 0; i < sz - 1; i++)
	{
		for (j = 0; j < sz - 1 - i; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				temp = arr[j+1];
				arr[j + 1] = arr[j];
				arr[j] = temp;
			}
		}
	}
}

struct stu
{
	//char* name;
	char name[20];
	int age;
};
int cmp_int(const void* e1, const void* e2)
{
	//比较两个整型值的函数
	return *(int*)e1 - *(int*)e2;
}
int cmp_float(const void* e1, const void* e2)
{
	//比较两个整型值的函数
	if (*(float*)e1 < *(float*)e2)
		return -1;
	else if (*(float*)e1 == *(float*)e2)
		return 0;
	else
		return 1;
}
int cmp_stu_by_age(const void* e1, const void* e2)
{
	return ((struct stu*)e1)->age - ((struct stu*)e2)->age;
}
int cmp_stu_by_name(const void* e1, const void* e2)
{
	return strcmp(((struct stu*)e1)->name, ((struct stu*)e2)->name);
}
void test1()
{
	int arr[10] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	qsort(arr, sz, sizeof(arr[0]), cmp_int);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
}
void test2()
{
	float f[] = { 9.0,8.0,7.0,6.0,5.0 };
	int sz = sizeof(f) / sizeof(f[0]);
	int i = 0;
	qsort(f, sz, sizeof(f[0]), cmp_float);
	for (i = 0; i < sz; i++)
	{
		printf("%f ", f[i]);
	}
}

void test3()
{
	struct stu s[3] = { {"zhangsan",20},{"lisi",30},{"wangwu",10} };
	int sz = sizeof(s) / sizeof(s[0]);
	qsort(s, sz, sizeof(s[0]),cmp_stu_by_age);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%s	", s[i].name);
		printf("%d\n", s[i].age);
	}
}

void test4()
{
	struct stu s[3] = { {"zhangsan",20},{"lisi",30},{"wangwu",10} };
	int sz = sizeof(s) / sizeof(s[0]);
	qsort(s, sz, sizeof(s[0]), cmp_stu_by_name);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%s	", s[i].name);
		printf("%d\n", s[i].age);
	}
}


int main()
{
	//bubble_sort(arr, sz);
	//test1();
	//test2();
	test3();
	test4();
	return 0;
}




